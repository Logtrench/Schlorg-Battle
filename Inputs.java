import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

public class Inputs{
  private static JFrame menu; 
  private static JPanel myPanel; //for buttons
  private JButton button1;
  private JButton button2;

  public Inputs(){

    myPanel = new JPanel();
    button1 = new JButton("Start");
    button2 = new JButton("Quit");

    Listen ourListener = new Listen();
    //Create an action listener for two buttons to share
    button1.addActionListener(ourListener);
    button2.addActionListener(ourListener);
    myPanel.add(button1); //Add buttons to the panel
    myPanel.add(button2);
}

private class Listen implements ActionListener
{
      /**
      * Use this internal class to listen for events generated by all event sources
      * Easy to handle event code modularization
      */
      public void actionPerformed(ActionEvent e){

        String buttonName = e.getActionCommand();
        if (buttonName.equals("Start"))
        {
          JOptionPane.showMessageDialog(menu, "Starting!");
        }
        else if (buttonName.equals("Quit"))
        {
          JOptionPane.showMessageDialog(menu, "Bye mofo");
          System.exit(0);
        }
        else
        {
          JOptionPane.showMessageDialog(menu, "What did you do?");
        }
      }
}

public static void main(String s[])
{
    Inputs gui = new Inputs(); //New Simple1 component
    menu = new JFrame("Menu"); //New JFrame
    //Common methods for handling closure events
    menu.addWindowListener(new WindowAdapter() {
      public void windowClosing(WindowEvent e)
      {
        System.exit(0);
      } 
    });

    menu.getContentPane().add(myPanel);
    menu.pack(); 
    menu.setVisible(true);
}}